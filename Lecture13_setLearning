// Set: Allow unique elements
const setNumbers = new Set(); // Creating Set
console.log("Adding elements in set");
setNumbers.add(0); // Add element
setNumbers.add(1);
setNumbers.add(3);
setNumbers.add(4);
setNumbers.add(1); // Adding duplicate element - 1
setNumbers.add(3);// Adding duplicate element - 3
console.log(setNumbers);


console.log(`Total available elements in Set`);
const totalElements =  setNumbers.size;
console.log(`Total elements in set : ${totalElements}`);

console.log(`After deletion`);
const isDeleted3 =  setNumbers.delete(3);
const isDeleted99 = setNumbers.delete(99);
console.log(setNumbers);
console.log(`Is 3 Deleted ? ${isDeleted3}, Is 99 Deleted: ${isDeleted99}`);
console.log(`Check element is available or not using has()`);
const isAvailable4 = setNumbers.has(4);
const isAvailable77 = setNumbers.has(77);
console.log(`Is 4 Available - ${isAvailable4}, Is 77 available - ${isAvailable77}`);
console.log(`Clearing set using clear() `);
setNumbers.clear();
console.log(setNumbers);
setNumbers.add(5);
setNumbers.add(6);
console.log(`Type of set is : ${typeof setNumbers}`);

for (const element of setNumbers) {
    console.log(element);
}
console.log(`Removing duplicate elements`);
let arrayOfNumbers = [5, 6, 4, 6, 5, 5, 6];
// const mySet = new Set(arrayOfNumbers);
// console.log(mySet);
// const myArray = [...mySet];
// console.log(myArray);

const myArray = [...new Set(arrayOfNumbers)];
console.log(myArray);
console.log("======== To check whether given key is available or not============");
const isKeyAvailable = mapOfNumbers.has(22);
console.log(isKeyAvailable);
console.log(`Is key 1111 available: ${mapOfNumbers.has(1111)}`);
console.log("===== Traversing over map====");
const keysOfMap = mapOfNumbers.keys();
console.log(keysOfMap);
for (const key of keysOfMap) {
    console.log(key,  mapOfNumbers.get(key));
}
class Employee {
    constructor(empId, empName, empAge, empCity) {
      this.empId = empId;
      this.empName = empName;
      this.empAge = empAge;
      this.empCity = empCity;
    }
  }
  const empSup = new Employee(11, "Supriya", 23, "PUNE");
  const empDhir = new Employee(22, "Dheeraj", 24, "MUMBAI");
  const empSachin = new Employee(33, "Sachin", 22, "Surat");
  const empGayatri = new Employee(44, "Gayatri", 21, "Bangluru");
  const mapOfEmployees = new Map(); // key -> empId   value -> employee object
  mapOfEmployees.set(11, empSup);
  mapOfEmployees.set(22, empDhir);
  mapOfEmployees.set(33, empSachin);
  mapOfEmployees.set(44, empGayatri);

 const keyOfMapEmployee = mapOfEmployees.keys();
 console.log(keyOfMapEmployee);
 for (const key of keyOfMapEmployee) {
     const employee = mapOfEmployees.get(key);
     console.log(employee.empName, employee.empCity);
 }
